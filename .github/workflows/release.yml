name: Release

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [windows, darwin, linux]
        goarch: [amd64, arm64]
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v5
      with:
        go-version-file: ./go.mod

    - name: Set binary name
      id: binname
      run: |
        if [[ "${{ matrix.goos }}" == "windows" ]]; then
          echo "binary_name=navarchiver.exe" >> $GITHUB_OUTPUT
        else
          echo "binary_name=navarchiver" >> $GITHUB_OUTPUT
        fi

    - name: Install cross compiler for ARM64
      if: matrix.goos == 'linux' && matrix.goarch == 'arm64'
      run: sudo apt-get update && sudo apt-get install -y gcc-aarch64-linux-gnu

    - name: Build Go project for target OS and Arch
      run: |
        BIN="${{ steps.binname.outputs.binary_name }}"

        if [[ "${{ matrix.goos }}" == "linux" && "${{ matrix.goarch }}" == "arm64" ]]; then
          GOOS=linux GOARCH=arm64 CGO_ENABLED=1 CC=aarch64-linux-gnu-gcc \
          go build -ldflags=-extldflags=-static -tags sqlite_omit_load_extension \
          -o "dist/${{ matrix.goos }}_${{ matrix.goarch }}/${BIN}" ./cmd/main.go
        else
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} CGO_ENABLED=0 \
          go build -o "dist/${{ matrix.goos }}_${{ matrix.goarch }}/${BIN}" ./cmd/main.go
        fi

    - name: Compress the binaries
      run: |
        mkdir -p dist/releases
        archname=${{ matrix.goarch }}
        if [[ "${{ matrix.goos }}" == "darwin" && "${{ matrix.goarch }}" == "amd64" ]]; then
          archname="x86_64"
        fi
        version=${GITHUB_REF_NAME} # v0.8.1-beta.2, etc.
        tar -czf "dist/releases/navarchiver-${version}-${{ matrix.goos }}-${archname}.tar.gz" \
          -C "dist/${{ matrix.goos }}_${{ matrix.goarch }}" ${{ steps.binname.outputs.binary_name }}

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: release-binaries-${{ matrix.goos }}-${{ matrix.goarch }}
        path: dist/releases/*.tar.gz

  upload:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
    - name: Download all build artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist/releases

    - name: Upload release assets
      uses: softprops/action-gh-release@v1
      with:
        files: dist/releases/**/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
